Compiled from "DSPSystem.java"
public class dsp.block.DSPSystem extends java.lang.Object{
public static final int MAX_PARTIALS;

public static final double MAX_LFO_RATE;

public static final int A4_MIDI;

public static final double A4_FREQUENCY;

public static final double NYQUIST_CPS;

public static final double ENV_CURVE;

public static final double ONE_OVER_127;

public static final double ONE_OVER_SAMPLINGRATE;

public static final double MAX_BPM;

public static final double MIN_BPM;

public static final double STEALABLE_POINT;

public static final java.io.PrintWriter DEBUG_OUT;

public static double getSamplingRate();
  Code:
   0:	getstatic	#2; //Field SAMPLING_RATE:D
   3:	dreturn

public static void setSamplingRate(double);
  Code:
   0:	dload_0
   1:	putstatic	#2; //Field SAMPLING_RATE:D
   4:	return

public static int getBufferSize();
  Code:
   0:	getstatic	#3; //Field BUFFER_SIZE:I
   3:	ireturn

public static int getPutSize();
  Code:
   0:	getstatic	#4; //Field PUT_SIZE:I
   3:	ireturn

public static void setBufferSize(int);
  Code:
   0:	iload_0
   1:	putstatic	#3; //Field BUFFER_SIZE:I
   4:	return

public static void setPutSize(int);
  Code:
   0:	iload_0
   1:	putstatic	#4; //Field PUT_SIZE:I
   4:	return

public static int getBigTableSize();
  Code:
   0:	sipush	1024
   3:	ireturn

public static int getSmallTableSize();
  Code:
   0:	ldc2_w	#5; //double 1024.0d
   3:	getstatic	#7; //Field TABLE_FACTOR:D
   6:	dmul
   7:	d2i
   8:	ireturn

public static void setTableFactor(double);
  Code:
   0:	dload_0
   1:	putstatic	#7; //Field TABLE_FACTOR:D
   4:	return

public static int getOverSamplingFactor();
  Code:
   0:	getstatic	#8; //Field OVER_SAMPLING:I
   3:	ireturn

public static void setOverSamplingFactor(int);
  Code:
   0:	iload_0
   1:	putstatic	#8; //Field OVER_SAMPLING:I
   4:	return

public static final void saveToFile(java.lang.String,double[]);
  Code:
   0:	new	#16; //class BufferedWriter
   3:	dup
   4:	new	#10; //class FileWriter
   7:	dup
   8:	aload_0
   9:	invokespecial	#12; //Method java/io/FileWriter."<init>":(Ljava/lang/String;)V
   12:	invokespecial	#17; //Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
   15:	astore_2
   16:	iconst_0
   17:	istore_3
   18:	goto	54
   21:	aload_2
   22:	new	#18; //class StringBuffer
   25:	dup
   26:	invokespecial	#19; //Method java/lang/StringBuffer."<init>":()V
   29:	ldc	#20; //String 
   31:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   34:	aload_1
   35:	iload_3
   36:	daload
   37:	invokevirtual	#22; //Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
   40:	ldc	#23; //String \n
   42:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   45:	invokevirtual	#24; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   48:	invokevirtual	#25; //Method java/io/BufferedWriter.write:(Ljava/lang/String;)V
   51:	iinc	3, 1
   54:	iload_3
   55:	aload_1
   56:	arraylength
   57:	if_icmplt	21
   60:	aload_2
   61:	invokevirtual	#26; //Method java/io/BufferedWriter.close:()V
   64:	goto	75
   67:	astore_2
   68:	aload_2
   69:	invokevirtual	#28; //Method java/lang/Exception.printStackTrace:()V
   72:	goto	75
   75:	return
  Exception table:
   from   to  target type
     0    64    67   Class java/lang/Exception


public static double getMidiNoteToCPS(double);
  Code:
   0:	dload_0
   1:	dconst_0
   2:	dcmpl
   3:	iflt	38
   6:	dload_0
   7:	ldc2_w	#29; //double 128.0d
   10:	dcmpg
   11:	ifge	38
   14:	ldc2_w	#31; //double 440.0d
   17:	ldc2_w	#33; //double 2.0d
   20:	dload_0
   21:	ldc2_w	#35; //double 69.0d
   24:	dsub
   25:	ldc2_w	#37; //double 12.0d
   28:	ddiv
   29:	invokestatic	#39; //Method java/lang/Math.pow:(DD)D
   32:	dmul
   33:	invokestatic	#40; //Method getSamplingRate:()D
   36:	ddiv
   37:	dreturn
   38:	dconst_0
   39:	dreturn

public static int getSamplesPerMilliseconds(double);
  Code:
   0:	dload_0
   1:	invokestatic	#40; //Method getSamplingRate:()D
   4:	dmul
   5:	ldc2_w	#41; //double 0.0010d
   8:	dmul
   9:	d2i
   10:	ireturn

public static double getMillisecondsPerSamples(int);
  Code:
   0:	sipush	1000
   3:	iload_0
   4:	imul
   5:	i2d
   6:	invokestatic	#40; //Method getSamplingRate:()D
   9:	ddiv
   10:	dreturn

public static void unsupported(java.lang.String);
  Code:
   0:	new	#43; //class UnsupportedOperationException
   3:	dup
   4:	aload_0
   5:	invokespecial	#44; //Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
   8:	athrow

public static java.lang.String getDSPSystemInfo();
  Code:
   0:	invokestatic	#45; //Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
   3:	astore_0
   4:	new	#18; //class StringBuffer
   7:	dup
   8:	invokespecial	#19; //Method java/lang/StringBuffer."<init>":()V
   11:	ldc	#46; //String DSPSystem\nMemory used 
   13:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   16:	aload_0
   17:	invokevirtual	#47; //Method java/lang/Runtime.totalMemory:()J
   20:	aload_0
   21:	invokevirtual	#48; //Method java/lang/Runtime.freeMemory:()J
   24:	lsub
   25:	invokevirtual	#49; //Method java/lang/StringBuffer.append:(J)Ljava/lang/StringBuffer;
   28:	ldc	#50; //String  kb\n
   30:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   33:	ldc	#51; //String Sampling Rate 
   35:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   38:	invokestatic	#40; //Method getSamplingRate:()D
   41:	invokevirtual	#22; //Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
   44:	ldc	#52; //String  Hz\n
   46:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   49:	ldc	#53; //String Max partials 
   51:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   54:	sipush	500
   57:	invokevirtual	#54; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   60:	ldc	#23; //String \n
   62:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   65:	ldc	#55; //String Large Table Size 
   67:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   70:	invokestatic	#56; //Method getBigTableSize:()I
   73:	invokevirtual	#54; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   76:	ldc	#23; //String \n
   78:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   81:	ldc	#57; //String Small Table Size 
   83:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   86:	invokestatic	#58; //Method getSmallTableSize:()I
   89:	invokevirtual	#54; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   92:	ldc	#23; //String \n
   94:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   97:	ldc	#59; //String A4 Frequency 
   99:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   102:	ldc2_w	#31; //double 440.0d
   105:	invokevirtual	#22; //Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
   108:	ldc	#52; //String  Hz\n
   110:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   113:	ldc	#60; //String A4 MIDI NOTE NUMBER 
   115:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   118:	bipush	69
   120:	invokevirtual	#54; //Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
   123:	ldc	#23; //String \n
   125:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   128:	ldc	#61; //String Max LFO rate 
   130:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   133:	ldc2_w	#62; //double 20.0d
   136:	invokevirtual	#22; //Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
   139:	ldc	#52; //String  Hz\n
   141:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   144:	ldc	#64; //String Decided Nyquist frequency 
   146:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   149:	ldc2_w	#65; //double 0.4535d
   152:	invokestatic	#40; //Method getSamplingRate:()D
   155:	dmul
   156:	invokevirtual	#22; //Method java/lang/StringBuffer.append:(D)Ljava/lang/StringBuffer;
   159:	ldc	#52; //String  Hz\n
   161:	invokevirtual	#21; //Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
   164:	invokevirtual	#24; //Method java/lang/StringBuffer.toString:()Ljava/lang/String;
   167:	areturn

public static void main(java.lang.String[]);
  Code:
   0:	getstatic	#67; //Field java/lang/System.out:Ljava/io/PrintStream;
   3:	invokestatic	#68; //Method getDSPSystemInfo:()Ljava/lang/String;
   6:	invokevirtual	#69; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   9:	return

static {};
  Code:
   0:	ldc2_w	#70; //double 44100.0d
   3:	putstatic	#2; //Field SAMPLING_RATE:D
   6:	sipush	4096
   9:	putstatic	#3; //Field BUFFER_SIZE:I
   12:	sipush	512
   15:	putstatic	#4; //Field PUT_SIZE:I
   18:	ldc2_w	#72; //double 0.5d
   21:	putstatic	#7; //Field TABLE_FACTOR:D
   24:	bipush	32
   26:	putstatic	#8; //Field OVER_SAMPLING:I
   29:	dconst_1
   30:	invokestatic	#40; //Method getSamplingRate:()D
   33:	ddiv
   34:	putstatic	#74; //Field ONE_OVER_SAMPLINGRATE:D
   37:	invokestatic	#75; //Method getDebugOutput:()Ljava/io/PrintWriter;
   40:	putstatic	#76; //Field DEBUG_OUT:Ljava/io/PrintWriter;
   43:	return

}

